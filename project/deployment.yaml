apiVersion: apps/v1
kind: Deployment
metadata:
  name: traffic-simulator
  labels:
    app: traffic-simulator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traffic-simulator
  template:
    metadata:
      labels:
        app: traffic-simulator
    spec:
      containers:
      - name: traffic-simulator
        image: grafana/k6:latest
        args:
          - run
          - --vus
          - "5"
          - --duration
          - "1m"
          - /scripts/test-script.js
        volumeMounts:
        - name: scripts
          mountPath: /scripts
      - name: metrics-exporter
        image: prom/prometheus:latest
        args:
          - "--config.file=/prometheus/prometheus.yml"
          - "--storage.tsdb.path=/prometheus-data"
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /prometheus
        - name: prometheus-data
          mountPath: /prometheus-data
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: scripts
        configMap:
          name: traffic-simulator-scripts
      - name: prometheus-config-volume
        configMap:
          name: prometheus-config
      - name: prometheus-data
        emptyDir: {}
---
apiVersion: v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        image: prom/prometheus:latest
        args:
          - "--config.file=/prometheus/prometheus.yml"
          - "--storage.tsdb.path=/prometheus-data"
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /prometheus
        - name: prometheus-data
          mountPath: /prometheus-data
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
        emptyDir: {}
      - name: grafana-storage
        emptyDir: {}
