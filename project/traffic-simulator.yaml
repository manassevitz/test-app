apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: default
data:
  prometheus.yml: |
    global:
      scrape_interval: 5s

    scrape_configs:
      - job_name: 'self'
        static_configs:
          - targets: ['localhost:8080']

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: traffic-simulator-scripts
  namespace: default
data:
  test-script.js: |
    import http from 'k6/http';
    import { check } from 'k6';

    export default function () {
      const res = http.get('http://test-server.local');
      check(res, {
        'status is 200': (r) => r.status === 200,
      });
    }
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: traffic-simulator
  labels:
    app: traffic-simulator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traffic-simulator
  template:
    metadata:
      labels:
        app: traffic-simulator
    spec:
      containers:
      - name: traffic-simulator
        image: grafana/k6:latest
        args:
          - run
          - --vus
          - "5"
          - --duration
          - "1m"
          - /scripts/test-script.js
        volumeMounts:
        - name: scripts
          mountPath: /scripts
      - name: metrics-exporter
        image: prom/prometheus:latest
        args:
          - "--config.file=/prometheus/prometheus.yml"
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /prometheus
      volumes:
      - name: scripts
        configMap:
          name: traffic-simulator-scripts
      - name: prometheus-config-volume
        configMap:
          name: prometheus-config
